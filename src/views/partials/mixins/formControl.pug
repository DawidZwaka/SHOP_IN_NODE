mixin input(type, name, value)
    input(type=type, name=name, value=value).form-control

mixin textarea(name, rows, value)
    textarea(name=name rows=rows? rows : 7).form-control #{value}

mixin label(name, label)
    label(for=name, class="").h6.font-weight-bold.pr-1 #{__(label)}:

mixin select(name, options, value) 
    select(name=name).form-control
        each opt in options
            if opt == value 
                option(value=opt, selected) #{opt}
            else 
                option(value=opt) #{opt}

mixin imagePicker(shape, size, oldSrc, uploaded)
    - let = sizeClass = ""
    case size
        when "sm"
            -sizeClass = "imagePicker--sm"
        when "lg"
            -sizeClass = "imagePicker--lg"

    .imagePicker.mx-auto(class=sizeClass,class=shape=="circle"? "imagePicker--circle":"")
        .imagePicker__image
            img(src=oldSrc).imageUploader__dist.h-100
            input(type="hidden", name="oldPicture", value=oldSrc)
            input(type="hidden", name="uploaded", value=uploaded)
        .imagePicker__picker
            input(type="file" class="custom-file-input" name="picture", value=oldSrc).imageUploader__src.w-100.h-100
            i.fas.fa-plus.text-white

mixin qtySelector(name, value)
    .d-flex.qtyCounter
        button.incQty.btn.btn-primary.text-white.rounded-0.px-2
            i.fas.fa-plus
        input(type="text", value=value, name=name).qtyCounter.m-0.ml-auto.px-2.text-center.font-weight-bold
        button.decQty.btn.btn-primary.text-white.rounded-0.px-2
            i.fas.fa-minus

mixin formControl(input, customClasses = "")
    .form-group(class=customClasses)
        case input.type
            when "text"
            when "number"
                +label(input.name, input.label)
                +input(input.type, input.name, input.value)
            when "textarea"
                +label(input.name, input.label)
                +textarea(input.name, input.rows, input.value)
            when "imagePicker"
                +imagePicker(input.shape, input.size, input.value, input.uploaded)
            when "select"
                +select(input.name,input.options,input.value)
            when "qtySelector"
                +qtySelector(input.name, input.value)
            when "switchWithTextField"
                .custom-control.custom-switch
                    input(type="checkbox", id=input.name, name=input.name, checked=input.checked? "checked" : false).custom-control-input
                    label(for=input.name).custom-control-label.border-1 #{input.label}